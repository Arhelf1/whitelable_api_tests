# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from grpc.txauth.client import txauth_client_pb2 as grpc_dot_txauth_dot_client_dot_txauth__client__pb2


class TxAuthClientStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Encode = channel.unary_unary(
        '/grpc.txauth.client.TxAuthClient/Encode',
        request_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.EncodeRequest.SerializeToString,
        response_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.EncodeResponse.FromString,
        )
    self.Decode = channel.unary_unary(
        '/grpc.txauth.client.TxAuthClient/Decode',
        request_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.DecodeRequest.SerializeToString,
        response_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.DecodeResponse.FromString,
        )
    self.GetQRCode = channel.unary_unary(
        '/grpc.txauth.client.TxAuthClient/GetQRCode',
        request_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.GetQRCodeRequest.SerializeToString,
        response_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.GetQRCodeResponse.FromString,
        )
    self.AuthByQRSession = channel.unary_unary(
        '/grpc.txauth.client.TxAuthClient/AuthByQRSession',
        request_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.AuthByQRSessionRequest.SerializeToString,
        response_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.AuthByQRSessionResponse.FromString,
        )
    self.GetQRSessionDetails = channel.unary_unary(
        '/grpc.txauth.client.TxAuthClient/GetQRSessionDetails',
        request_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.GetQRSessionDetailsRequest.SerializeToString,
        response_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.GetQRSessionDetailsResponse.FromString,
        )
    self.ApproveQRSession = channel.unary_unary(
        '/grpc.txauth.client.TxAuthClient/ApproveQRSession',
        request_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.ApproveQRSessionRequest.SerializeToString,
        response_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.ApproveQRSessionResponse.FromString,
        )


class TxAuthClientServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Encode(self, request, context):
    """
    Метод шифрования абстрактных данных. Используются ключи, принадлежащие клиенту.
    В заголовке Authorization ожидается клиентский jwt-токен.
    Ошибки передаются посредством grpc-exceptions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Decode(self, request, context):
    """
    Метод дешифрования абстрактных данных. Используются ключи, принадлежащие клиенту.
    В заголовке Authorization ожидается клиентский jwt-токен.
    Ошибки передаются посредством grpc-exceptions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetQRCode(self, request, context):
    """
    Запрос QR-кода для авторизации посредством мобильного устройства.
    Метод предназначен для использования только со стационарных устройств.
    Ошибки передаются посредством grpc-exceptions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AuthByQRSession(self, request, context):
    """
    Запрос клиентского jwt-токена по идентификатору QR-сессии.
    Должен периодически вызываться пока не будет получен терминальный статус или терминальная ошибка.
    Метод предназначен для использования только со стационарных устройств.
    Ошибки передаются посредством grpc-exceptions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetQRSessionDetails(self, request, context):
    """
    Запрос о деталях устройства, с которого идёт попытка авторизации по QR-коду.
    Метод предназначен для использования только с мобильных устройств.
    В заголовке Authorization ожидается клиентский jwt-токен.
    Ошибки передаются посредством grpc-exceptions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ApproveQRSession(self, request, context):
    """
    Подтверждение авторизации стационарного устройства по QR-коду.
    Метод предназначен для использования только с мобильных устройств.
    В заголовке Authorization ожидается клиентский jwt-токен.
    Ошибки передаются посредством grpc-exceptions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TxAuthClientServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Encode': grpc.unary_unary_rpc_method_handler(
          servicer.Encode,
          request_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.EncodeRequest.FromString,
          response_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.EncodeResponse.SerializeToString,
      ),
      'Decode': grpc.unary_unary_rpc_method_handler(
          servicer.Decode,
          request_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.DecodeRequest.FromString,
          response_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.DecodeResponse.SerializeToString,
      ),
      'GetQRCode': grpc.unary_unary_rpc_method_handler(
          servicer.GetQRCode,
          request_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.GetQRCodeRequest.FromString,
          response_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.GetQRCodeResponse.SerializeToString,
      ),
      'AuthByQRSession': grpc.unary_unary_rpc_method_handler(
          servicer.AuthByQRSession,
          request_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.AuthByQRSessionRequest.FromString,
          response_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.AuthByQRSessionResponse.SerializeToString,
      ),
      'GetQRSessionDetails': grpc.unary_unary_rpc_method_handler(
          servicer.GetQRSessionDetails,
          request_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.GetQRSessionDetailsRequest.FromString,
          response_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.GetQRSessionDetailsResponse.SerializeToString,
      ),
      'ApproveQRSession': grpc.unary_unary_rpc_method_handler(
          servicer.ApproveQRSession,
          request_deserializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.ApproveQRSessionRequest.FromString,
          response_serializer=grpc_dot_txauth_dot_client_dot_txauth__client__pb2.ApproveQRSessionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'grpc.txauth.client.TxAuthClient', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
